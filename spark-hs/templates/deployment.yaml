{{- define "logDirectoryTag" }}
  {{- if eq .Values.app.cloudProvider "amazon"}}
    {{- printf "s3a://%s" .Values.app.logDirectory }}
  {{- else if eq .Values.app.cloudProvider "alibaba"}}
    {{- printf "oss://%s" .Values.app.logDirectory }}
  {{- else if eq .Values.app.cloudProvider "azure"}}
    {{- printf "wasb://%s@%s.blob.core.windows.net" .Values.app.logDirectory .Values.app.azureStorageAccountName }}
  {{- else if eq .Values.app.cloudProvider "google"}}
    {{- printf "gs://%s" .Values.app.logDirectory }}
  {{- end }}
{{- end }}
{{- $schema := .Values.app.cloudProvider }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "spark-hs.fullname" . }}
  labels:
    app: {{ template "spark-hs.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "spark-hs.fullname" . }}
    spec:
      initContainers:
      - name: {{ .Chart.Name }}-init-config
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
          - secretRef:
              name: {{ default (printf "%s" (include "spark-hs.fullname" .)) .Values.secretName }}
        command:
          - '/bin/sh'
          - '-c'
          - >
            envsubst < /opt/spark/prepared_conf/spark-defaults.conf > /opt/spark/conf/spark-defaults.conf;
        volumeMounts:
          - name: config-volume
            mountPath: /opt/spark/conf/
          - name: config-init-volume
            mountPath: /opt/spark/prepared_conf/spark-defaults.conf
            subPath: spark-defaults.conf
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - '/opt/spark/sbin/start-history-server.sh'
        env:
          - name: SPARK_NO_DAEMONIZE
            value: "false"
          - name: SPARK_HISTORY_OPTS
            value: {{ printf "-Dspark.history.fs.logDirectory=%s" (include "logDirectoryTag" . )}}
        volumeMounts:
          - name: config-volume
            mountPath: /opt/spark/conf/spark-defaults.conf
            subPath: spark-defaults.conf
        {{- if eq $schema "google" }}
          - name: google-secret
            mountPath: /opt/spark/conf/secret/google.json
            subPath: google.json
        {{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.service.internalPort }}
            protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: config-volume
          emptyDir: {}
        - name: config-init-volume
          configMap:
            name: {{ template "fullname" . }}-spark-hs-config
      {{- if eq $schema "google" }}
        - name: google-secret
          secret:
            secretName: {{ default (printf "%s" (include "spark-hs.fullname" .)) .Values.secretName }}
      {{- end }}
